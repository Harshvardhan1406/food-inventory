name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
    
    - name: Add EC2 to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to EC2
      run: |
        # Create application directory on EC2 if it doesn't exist
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p /home/${{ secrets.EC2_USER }}/shivam-assignment"
        
        # Stop existing application
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd /home/${{ secrets.EC2_USER }}/shivam-assignment && if [ -f scripts/stop.sh ]; then bash scripts/stop.sh; fi"
        
        # Sync code to EC2 (excluding unnecessary files)
        rsync -avz --delete \
          --exclude='.git' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='.env' \
          --exclude='venv' \
          --exclude='node_modules' \
          --exclude='.DS_Store' \
          ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/shivam-assignment/
        
        # Make scripts executable
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "chmod +x /home/${{ secrets.EC2_USER }}/shivam-assignment/scripts/*.sh"
        
        # Run deployment script
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd /home/${{ secrets.EC2_USER }}/shivam-assignment && bash scripts/deploy.sh"
    
    - name: Verify deployment
      run: |
        # Wait a moment for the server to fully start
        sleep 10
        
        # Check if Django server is running
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd /home/${{ secrets.EC2_USER }}/shivam-assignment && bash scripts/status.sh"
        
        # Test HTTP endpoint (optional - comment out if no public access yet)
        # curl -f http://${{ secrets.EC2_HOST }}:8000/ || echo "HTTP check failed - server might not be publicly accessible yet" 